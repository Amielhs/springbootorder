<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tt.springbootorder.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.tt.springbootorder.pojo.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userCode" property="usercode" jdbcType="VARCHAR"/>
        <result column="userName" property="username" jdbcType="VARCHAR"/>
        <result column="userPassword" property="userpassword" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="userRole" property="userrole" jdbcType="INTEGER"/>
        <result column="createdBy" property="createdby" jdbcType="BIGINT"/>
        <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP"/>
        <result column="modifyBy" property="modifyby" jdbcType="BIGINT"/>
        <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP"/>
        <result property="roleName" column="roleName"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, userCode, userName, userPassword, gender, birthday, phone, address, userRole, 
    createdBy, creationDate, modifyBy, modifyDate
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from smbms_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <!--通过用户名和密码查找到用户-->
    <select id="selectByUserAndPwd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from smbms_user
        where userName = #{userName,jdbcType=BIGINT} and
        userPassword = #{userPassword,jdbcType=BIGINT}
    </select>
    <!--查询到所有用户-->
    <select id="selectAll" resultMap="BaseResultMap">
        select
        u.id, userCode, userName, userPassword, gender, birthday, phone, address, userRole,
        u.createdBy, u.creationDate,  u.modifyBy,  u.modifyDate,r.roleName
        FROM smbms_user u INNER JOIN smbms_role r
        WHERE u.userRole = r.id;
    </select>

    <!--通过用户编号查询到用户信息（为用户修改信息做准备）-->
    <select id="selectByUserCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from smbms_user
        where userCode = #{userCode,jdbcType=BIGINT}
    </select>

    <!--通过用户名称或者用户角色查询到用户的信息-->
    <select id="selectByUserNameOrRole" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM smbms_user u
        WHERE u.userName = #{name,jdbcType=BIGINT}
        OR u.userRole = #{userrole,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from smbms_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.tt.springbootorder.pojo.User">
    insert into smbms_user (id, userCode, userName, 
      userPassword, gender, birthday, 
      phone, address, userRole, 
      createdBy, creationDate, modifyBy, 
      modifyDate)
    values (#{id,jdbcType=BIGINT}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{userpassword,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{userrole,jdbcType=INTEGER}, 
      #{createdby,jdbcType=BIGINT}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=BIGINT}, 
      #{modifydate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.tt.springbootorder.pojo.User">
        insert into smbms_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="usercode != null">
                userCode,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="userpassword != null">
                userPassword,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="userrole != null">
                userRole,
            </if>
            <if test="createdby != null">
                createdBy,
            </if>
            <if test="creationdate != null">
                creationDate,
            </if>
            <if test="modifyby != null">
                modifyBy,
            </if>
            <if test="modifydate != null">
                modifyDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="usercode != null">
                #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpassword != null">
                #{userpassword,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="userrole != null">
                #{userrole,jdbcType=INTEGER},
            </if>
            <if test="createdby != null">
                #{createdby,jdbcType=BIGINT},
            </if>
            <if test="creationdate != null">
                #{creationdate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyby != null">
                #{modifyby,jdbcType=BIGINT},
            </if>
            <if test="modifydate != null">
                #{modifydate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tt.springbootorder.pojo.User">
        update smbms_user
        <set>
            <if test="usercode != null">
                userCode = #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userpassword != null">
                userPassword = #{userpassword,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="userrole != null">
                userRole = #{userrole,jdbcType=INTEGER},
            </if>
            <if test="createdby != null">
                createdBy = #{createdby,jdbcType=BIGINT},
            </if>
            <if test="creationdate != null">
                creationDate = #{creationdate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyby != null">
                modifyBy = #{modifyby,jdbcType=BIGINT},
            </if>
            <if test="modifydate != null">
                modifyDate = #{modifydate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tt.springbootorder.pojo.User">
    update smbms_user
    set userCode = #{usercode,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userPassword = #{userpassword,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      userRole = #{userrole,jdbcType=INTEGER},
      createdBy = #{createdby,jdbcType=BIGINT},
      creationDate = #{creationdate,jdbcType=TIMESTAMP},
      modifyBy = #{modifyby,jdbcType=BIGINT},
      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByUserName">
        update smbms_user
        set userPassword = #{pwd,jdbcType=VARCHAR}
        where userName = #{name,jdbcType=BIGINT}
    </update>

</mapper>